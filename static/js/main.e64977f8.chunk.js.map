{"version":3,"sources":["styles/styles.js","components/controls/ColorModal.js","components/controls/Colors.js","components/Controls.js","components/Scene.js","components/Table.js","components/Ruler.js","components/Builder.js","App.js","reportWebVitals.js","index.js"],"names":["appear","keyframes","ControlsContainer","styled","div","RadioButton","ColorModalContainer","ModalContainer","ColCarre","Color","ColorButton","Header","header","LogoImage","img","Total","h1","AppContainer","SettingsButton","CloseButton","ColorModal","changeColor","part","name","color","map","col","onClick","style","background","Colors","Scene3D","useState","openTopColors","setOpenTopColors","openSideColors","setOpenSideColors","topColor","sideColor","console","log","scene","children","filter","item","el","material","set","renderer","render","camera","Controls","topWidth","setTopWidth","topDepth","setTopDepth","sideHeight","setSideHeight","total","setTotal","realWidth","setRealWidth","controlsOpen","setControlsOpen","changeTopSize","part1","part2","position","width","scale","useEffect","height","parseFloat","sub","geometry","parameters","x","z","changeHeight","src","alt","type","min","max","value","step","onChange","e","target","Math","round","Scene","this","container","document","getElementById","THREE","window","innerWidth","innerHeight","add","light","spotLight","castShadow","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","appendChild","domElement","controls","OrbitControls","update","requestAnimationFrame","animate","Table","topPlane","sidePlane","backPlane","sideGeometry","y","bottomMaterial","side","leftSide","rightSide","topMaterial","topGeometry","rotateZ","PI","backGeometry","rotateY","Ruler","materialA","materialB","materialC","topRuler","top","find","sideRuler","backRuler","TableElement","init","id","App","Builder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"6jFAGA,IAAMA,EAASC,YAAH,KAgBCC,EAAoBC,IAAOC,IAAV,IASfJ,GAGFK,EAAcF,IAAOC,IAAV,KAQXE,EAAsBH,IAAOC,IAAV,KAKnBG,EAAiBJ,IAAOC,IAAV,KAOdI,EAAWL,IAAOC,IAAV,KAKRK,EAAQN,IAAOC,IAAV,KAMLM,EAAcP,IAAOC,IAAV,KAgBXO,EAASR,IAAOS,OAAV,KASNC,EAAYV,IAAOW,IAAV,KAKTC,EAAQZ,IAAOa,GAAV,KAKLC,EAAed,IAAOC,IAAV,KAIZc,EAAiBf,IAAOW,IAAV,KAQdK,EAAchB,IAAOW,IAAV,KC3ETM,EA1BI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAYjC,OACE,cAAChB,EAAD,UACE,cAACC,EAAD,UAbW,CACb,CACEgB,KAAM,cACNC,MAAO,WAET,CAAED,KAAM,cAAeC,MAAO,WAC9B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,YAAaC,MAAO,WAC5B,CAAED,KAAM,YAAaC,MAAO,WAC5B,CAAED,KAAM,QAASC,MAAO,YAKZC,KAAI,SAACC,GAAD,OACV,eAAClB,EAAD,CAAUmB,QAAS,kBAAMN,EAAYK,EAAIF,MAAOF,IAAhD,UACE,cAACb,EAAD,CAAOmB,MAAO,CAAEC,WAAYH,EAAIF,SAChC,4BAAIE,EAAIH,kBCwBLO,EA9CA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACYC,oBAAS,GADrB,mBACvBC,EADuB,KACRC,EADQ,OAEcF,oBAAS,GAFvB,mBAEvBG,EAFuB,KAEPC,EAFO,OAGEJ,mBAAS,WAHX,mBAGvBK,EAHuB,aAIIL,mBAAS,YAJb,mBAIvBM,EAJuB,KAMxBjB,GANwB,KAMV,SAACG,EAAOF,GAC1BiB,QAAQC,IAAI,QAAShB,GACrBU,GAAiB,GACjBE,GAAkB,GAClBG,QAAQC,IAAIT,EAAQU,MAAMC,UAC1BX,EAAQU,MAAMC,SACXC,QAAO,SAACC,GAAD,OAAUA,EAAKrB,OAASD,KAC/BG,KAAI,SAACoB,GACJN,QAAQC,IAAI,KAAMK,GAClBA,EAAGC,SAAStB,MAAMuB,IAAIvB,GACtBO,EAAQiB,SAASC,OAAOlB,EAAQU,MAAOV,EAAQmB,aAIrD,OACE,gCACE,cAACxC,EAAD,CAAaiB,QAAS,kBAAMO,GAAkBD,IAA9C,SACGA,EAAgB,eAAiB,qBAEpC,cAACzB,EAAD,UACE,cAACC,EAAD,CAAOmB,MAAO,CAAEC,WAAYQ,OAE7BJ,EACC,cAAC,EAAD,CAAYZ,YAAaA,EAAaC,KAAM,cAC1C,KAEJ,cAACZ,EAAD,CAAaiB,QAAS,kBAAMS,GAAmBD,IAA/C,SACGA,EAAiB,eAAiB,sBAErC,cAAC3B,EAAD,UACE,cAACC,EAAD,CAAOmB,MAAO,CAAEC,WAAYS,OAG7BH,EACC,cAAC,EAAD,CAAYd,YAAaA,EAAaC,KAAM,eAC1C,SCkFK6B,EArHE,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,QAAc,EACAC,mBAAS,IADT,mBACzBoB,EADyB,KACfC,EADe,OAEArB,mBAAS,IAFT,mBAEzBsB,EAFyB,KAEfC,EAFe,OAGIvB,mBAAS,GAHb,mBAGzBwB,EAHyB,KAGbC,EAHa,OAINzB,mBAAS,KAJH,mBAIzB0B,EAJyB,KAIlBC,EAJkB,OAKE3B,mBAAS,GALX,mBAKzB4B,EALyB,KAKdC,EALc,OAMQ7B,oBAAS,GANjB,mBAMzB8B,EANyB,KAMXC,EANW,KAQ1BC,EAAgB,SAACC,EAAOC,EAAOC,EAAUC,GACxBrC,EAAQU,MAAMC,SAASC,QAC1C,SAACC,GAAD,OAAUA,EAAKrB,OAAS0C,GAASrB,EAAKrB,OAAS2C,KAEpCzC,KAAI,SAACmB,GAChBA,EAAKyB,MAAMF,GAAYC,EACvBrC,EAAQiB,SAASC,OAAOlB,EAAQU,MAAOV,EAAQmB,YAmBnDoB,qBAAU,WACR,IAAMF,EAAQhB,EAAW,GACzBS,EAAaD,EAAYQ,GACrBrC,EAAQU,OAAOuB,EAAc,YAAa,YAAa,IAAKI,KAC/D,CAAChB,IAEJkB,qBAAU,WACR,IAAMF,EAAQd,EAAW,GACrBvB,EAAQU,OAAOuB,EAAc,YAAa,YAAa,IAAKI,KAC/D,CAACd,IAEJgB,qBAAU,WACR,IAAMC,EAASC,WAAWhB,GACtBzB,EAAQU,OA5BO,SAACwB,EAAOC,EAAOC,EAAUI,GACvBxC,EAAQU,MAAMC,SAASC,QAC1C,SAACC,GAAD,OAAUA,EAAKrB,OAAS0C,GAASrB,EAAKrB,OAAS2C,KAGpCzC,KAAI,SAACmB,GAChBA,EAAKyB,MAAMF,GAAYI,EACvB,IAEME,IAFQ7B,EAAK8B,SAASC,WAAWJ,OAASA,EAC3B3B,EAAK8B,SAASC,WAAWJ,QAC1B,EACpB3B,EAAKuB,SAASpB,IAAIH,EAAKuB,SAASS,EAAGH,EAAK7B,EAAKuB,SAASU,GACtD9C,EAAQiB,SAASC,OAAOlB,EAAQU,MAAOV,EAAQmB,WAiB9B4B,CAAa,aAAc,aAAc,IAAKP,KAChE,CAACf,IAcJ,OAJAc,qBAAU,WAHRX,EADiB,IAHoB,IAAjBP,EAAW,IACI,IAAjBE,EAAW,IACE,GAAbE,KAOjB,CAACJ,EAAUE,EAAUE,IAEjBM,EACL,eAAC5D,EAAD,WACE,cAACiB,EAAD,CACEQ,QAAS,kBAAMoC,GAAiBD,IAChCiB,IAAI,mBACJC,IAAI,aAEN,eAAC3E,EAAD,WACE,oDACA,uBACE4E,KAAK,QACLC,IAAI,IACJC,IAAI,KACJC,MAAOhC,EACPiC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOlC,EAAYkC,EAAEC,OAAOJ,aAI1C,eAAC/E,EAAD,WACE,oDACA,uBACE4E,KAAK,QACLC,IAAI,IACJC,IAAI,KACJC,MAAO9B,EACP+B,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOhC,EAAYgC,EAAEC,OAAOJ,aAI1C,eAAC/E,EAAD,WACE,kDACA,uBACE4E,KAAK,QACLC,IAAI,IACJC,IAAI,IACJC,MAAO5B,EACP6B,KAAK,OACLC,SAAU,SAACC,GAAD,OAAO9B,EAAc8B,EAAEC,OAAOJ,aAG5C,cAAC,EAAD,CAAQrD,QAASA,IACjB,cAAChB,EAAD,UACE,wCAAW0E,KAAKC,MAAMhC,WAI1B,cAACxC,EAAD,CACES,QAAS,kBAAMoC,GAAiBD,IAChCiB,IAAI,oBACJC,IAAI,c,6BCvHWW,E,WACnB,aAAe,oBACbC,KAAKnD,MAAQ,KACbmD,KAAK1C,OAAS,KACd0C,KAAK5C,SAAW,K,mDAIhB,IAAM6C,EAAYC,SAASC,eAAe,iBACpCtD,EAAQ,IAAIuD,IAClBvD,EAAMZ,WAAa,IAAImE,IAAY,WAEnC,IAAM9C,EAAS,IAAI8C,IACjB,GACAC,OAAOC,WAAaD,OAAOE,YAC3B,EACA,KAGFjD,EAAOiB,SAASpB,IAAI,EAAG,GAAI,IAC3BN,EAAM2D,IAAIlD,GAEV,IAAMmD,EAAQ,IAAIL,IAAmB,UACrCK,EAAMlC,SAASpB,IAAI,EAAG,IAAK,KAC3BN,EAAM2D,IAAIC,GAEV,IAAIC,EAAY,IAAIN,IAAgB,SACpCM,EAAUnC,SAASpB,IAAI,EAAG,IAAK,IAC/BuD,EAAUC,YAAa,EACvB9D,EAAM2D,IAAIE,GAEV,IAAMtD,EAAW,IAAIgD,IAAoB,CAAEQ,WAAW,IACtDxD,EAASyD,cAAcR,OAAOS,kBAC9B1D,EAAS2D,QAAQV,OAAOC,WAAYD,OAAOE,aAC3CnD,EAAS4D,UAAUC,SAAU,EAC7BhB,EAAUiB,YAAY9D,EAAS+D,YAC/B/D,EAASC,OAAOR,EAAOS,GAEvB0C,KAAKnD,MAAQA,EACbmD,KAAK1C,OAASA,EACd0C,KAAK5C,SAAWA,EAEhB,IAAMgE,EAAW,IAAIC,IAAc/D,EAAQF,EAAS+D,YACpDC,EAASE,SAETC,uBAEA,SAASC,IACPD,sBAAsBC,GACtBJ,EAASE,SACTlE,EAASC,OAAOR,EAAOS,U,KCnDRmE,E,WACnB,WAAYC,EAAUC,EAAWC,GAAY,oBAC3C5B,KAAK0B,SAAWA,EAChB1B,KAAK2B,UAAYA,EACjB3B,KAAK4B,UAAYA,E,oDAGgB,IAA5B/E,EAA2B,EAA3BA,MAAOS,EAAoB,EAApBA,OAAQF,EAAY,EAAZA,SACdyE,EAAe,IAAIzB,IACvBJ,KAAK2B,UAAU3C,EACfgB,KAAK2B,UAAUG,EACf9B,KAAK2B,UAAU1C,GAEX8C,EAAiB,IAAI3B,IAA0B,CACnDxE,MAAO,UACPoG,KAAM5B,MAGF6B,EAAW,IAAI7B,IAAWyB,EAAcE,GAC9CE,EAAS1D,SAASS,EAAI,EACtBiD,EAAStG,KAAO,aAChBkB,EAAM2D,IAAIyB,GAEV,IAAMC,EAAY,IAAI9B,IAAWyB,EAAcE,GAC/CG,EAAU3D,SAASS,GAAK,EACxBkD,EAAUvG,KAAO,aACjBkB,EAAM2D,IAAI0B,GAEV,IAAMC,EAAc,IAAI/B,IAA0B,CAChDxE,MAAO,UACPoG,KAAM5B,MAGFgC,EAAc,IAAIhC,IACtBJ,KAAK0B,SAAS1C,EACdgB,KAAK0B,SAASI,EACd9B,KAAK0B,SAASzC,GAEVyC,EAAW,IAAItB,IAAWgC,EAAaD,GAC7CT,EAASnD,SAASuD,EAAI,EACtBJ,EAASW,SAASxC,KAAKyC,GAAK,GAC5BZ,EAAS/F,KAAO,YAChBkB,EAAM2D,IAAIkB,GAEV,IAAMa,EAAe,IAAInC,IACvBJ,KAAK4B,UAAU5C,EACfgB,KAAK4B,UAAUE,EACf9B,KAAK4B,UAAU3C,GAGX2C,EAAY,IAAIxB,IAAWmC,EAAcR,GAC/CH,EAAUrD,SAASuD,EAAI,EACvBF,EAAUrD,SAASU,EAAI,EACvB2C,EAAUY,SAAS3C,KAAKyC,GAAK,GAC7BV,EAAUjG,KAAO,aACjBkB,EAAM2D,IAAIoB,GAEVxE,EAASC,OAAOR,EAAOS,O,KCzDNmF,E,WACnB,WAAYf,EAAUC,EAAWC,GAAY,oBAC3C5B,KAAK0B,SAAWA,EAChB1B,KAAK2B,UAAYA,EACjB3B,KAAK4B,UAAYA,E,oDAGgB,IAA5B/E,EAA2B,EAA3BA,MAAOS,EAAoB,EAApBA,OAAQF,EAAY,EAAZA,SACdsF,EAAY,IAAItC,IAA0B,CAC9CxE,MAAO,QACPoG,KAAM5B,MAEFuC,EAAY,IAAIvC,IAA0B,CAC9CxE,MAAO,IACPoG,KAAM5B,MAEFwC,EAAY,IAAIxC,IAA0B,CAC9CxE,MAAO,MACPoG,KAAM5B,MAGFgC,EAAc,IAAIhC,IAAkB,GAAKJ,KAAK0B,SAASI,EAAG,IAC1De,EAAW,IAAIzC,IAAWgC,EAAaM,GACvCI,EAAMjG,EAAMC,SAASiG,MAAK,SAAC/F,GAAD,MAAwB,cAAdA,EAAKrB,QAC5C4C,SACHsE,EAAStE,SAASS,EAAI8D,EAAI9D,EAC1B6D,EAAStE,SAASuD,EAAIgB,EAAIhB,EAAI,GAC9Be,EAAStE,SAASU,EAAI6D,EAAI7D,EAAI,EAC9B4D,EAASR,SAASxC,KAAKyC,GAAK,GAC5BO,EAASlH,KAAO,YAChBkB,EAAM2D,IAAIqC,GAEV,IAAMhB,EAAe,IAAIzB,IAAkB,GAAKJ,KAAK2B,UAAUG,EAAG,IAC5DkB,EAAY,IAAI5C,IAAWyB,EAAcc,GACzCX,EAAOnF,EAAMC,SAASiG,MAAK,SAAC/F,GAAD,MAAwB,eAAdA,EAAKrB,QAC7C4C,SACHyE,EAAUzE,SAASS,EAAIgD,EAAKhD,EAAI,EAChCgE,EAAUzE,SAASuD,EAAIE,EAAKF,EAC5BkB,EAAUzE,SAASU,EAAI+C,EAAK/C,EAAI,EAChC+D,EAAUrH,KAAO,aACjBkB,EAAM2D,IAAIwC,GAEV,IAAMT,EAAe,IAAInC,IAAkB,GAAK,GAAKJ,KAAK0B,SAASzC,GAC7DgE,EAAY,IAAI7C,IAAWmC,EAAcK,GAC/CK,EAAU1E,SAASS,EAAI8D,EAAI9D,EAAI,EAC/BiE,EAAU1E,SAASuD,EAAIgB,EAAIhB,EAAI,GAC/BmB,EAAU1E,SAASU,EAAI6D,EAAI7D,EAE3BgE,EAAUtH,KAAO,YACjBkB,EAAM2D,IAAIyC,GAEV7F,EAASC,OAAOR,EAAOS,O,KC9CrBnB,EAAU,IAAI4D,EACd2B,EAAW,CAAE1C,EAAG,GAAK8C,EAAG,GAAI7C,EAAG,IAC/B0C,EAAY,CAAE3C,EAAG,GAAK8C,EAAG,EAAG7C,EAAG,GAC/B2C,EAAY,CAAE5C,EAAG,GAAK8C,EAAG,EAAG7C,EAAG,IAE/BiE,GAAe,IAAIzB,EAAMC,EAAUC,EAAWC,GAGrC,IAFM,IAAIa,EAAMf,EAAUC,EAAWC,GAErC,WACblD,qBAAU,WACRvC,EAAQgH,OACRD,GAAaC,KAAK,CAChBtG,MAAOV,EAAQU,MACfS,OAAQnB,EAAQmB,OAChBF,SAAUjB,EAAQiB,aAOnB,IAWH,OACE,gCACE,qBAAKgG,GAAG,kBACR,cAAC,EAAD,CAAUjH,QAASA,SC3BVkH,OAZf,WACE,OACE,eAAChI,EAAD,WACE,eAACN,EAAD,WACE,cAACE,EAAD,CAAWkE,IAAI,uBACf,qDAEF,cAACmE,GAAD,QCESC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS3G,OACP,cAAC,IAAM4G,WAAP,UACE,cAAC,GAAD,MAEF/D,SAASC,eAAe,SAM1BoD,O","file":"static/js/main.e64977f8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport { jsx, css, keyframes } from \"@emotion/react\";\n\nconst appear = keyframes`\n  from, 0% to {\n    transform: translate3d(-100px, 0, 0);\n    opacity: 0;\n  }\n\n  50% {\n    transform: translate3d(-50px, 0, 0);\n  }\n\n  80%, 85%, 90% {\n    transform: translate3d(10px, 0, 0);\n    opacity: 0.2;\n  }\n`;\n\nexport const ControlsContainer = styled.div`\n  position: fixed;\n  right: 10px;\n  top: 10px;\n  bottom: 30px;\n  background: black;\n  opacity: 0.7;\n  padding: 10px;\n  border-radius: 20px;\n  animation: ${appear} 1s ease;\n`;\n\nexport const RadioButton = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 0;\n  color: white;\n  width: 250px;\n`;\n\nexport const ColorModalContainer = styled.div`\n  background: white;\n  z-index: 1;\n`;\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ColCarre = styled.div`\n  margin: 10px;\n  cursor: pointer;\n`;\n\nexport const Color = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 10px;\n`;\n\nexport const ColorButton = styled.div`\n  padding: 10px 20px;\n  width: max-content;\n  border-radius: 30px;\n  background: #2779dd;\n  border: 2px solid black;\n  cursor: pointer;\n  margin-top: 20px;\n  color: white;\n  &:hover {\n    background: #5991d9;\n    border: 2px solid black;\n    color: white;\n  }\n`;\n\nexport const Header = styled.header`\n  background: white;\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  padding: 5px;\n  font-weight: bold;\n`;\n\nexport const LogoImage = styled.img`\n  width: 100px;\n  margin-right: 10px;\n`;\n\nexport const Total = styled.h1`\n  color: white;\n  font-weight: bold;\n`;\n\nexport const AppContainer = styled.div`\n  font-family: \"Fjalla One\", sans-serif;\n`;\n\nexport const SettingsButton = styled.img`\n  width: 40px;\n  position: fixed;\n  right: 10px;\n  top: 5px;\n  cursor: pointer;\n`;\n\nexport const CloseButton = styled.img`\n  width: 30px;\n  position: fixed;\n  right: 20px;\n  top: 20px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport {\n  ColorModalContainer,\n  ModalContainer,\n  ColCarre,\n  Color,\n} from \"../../styles/styles\";\n\nconst ColorModal = ({ changeColor, part }) => {\n  const colors = [\n    {\n      name: \"white shiny\",\n      color: \"#ffffff\",\n    },\n    { name: \"white shiny\", color: \"#ffffff\" },\n    { name: \"light grey\", color: \"#d9d9d9\" },\n    { name: \"dark grey\", color: \"#cccccc\" },\n    { name: \"antracite\", color: \"#666666\" },\n    { name: \"black\", color: \"#000000\" },\n  ];\n  return (\n    <ColorModalContainer>\n      <ModalContainer>\n        {colors.map((col) => (\n          <ColCarre onClick={() => changeColor(col.color, part)}>\n            <Color style={{ background: col.color }}></Color>\n            <p>{col.name}</p>\n          </ColCarre>\n        ))}\n      </ModalContainer>\n    </ColorModalContainer>\n  );\n};\n\nexport default ColorModal;\n","import React, { useState } from \"react\";\nimport { ColorButton, ColCarre, Color } from \"../../styles/styles\";\nimport ColorModal from \"./ColorModal\";\n\nconst Colors = ({ Scene3D }) => {\n  const [openTopColors, setOpenTopColors] = useState(false);\n  const [openSideColors, setOpenSideColors] = useState(false);\n  const [topColor, setTopColor] = useState(\"#996633\");\n  const [sideColor, setSideColor] = useState(\"#f0dea6\");\n\n  const changeColor = (color, part) => {\n    console.log(\"color\", color);\n    setOpenTopColors(false);\n    setOpenSideColors(false);\n    console.log(Scene3D.scene.children);\n    Scene3D.scene.children\n      .filter((item) => item.name === part)\n      .map((el) => {\n        console.log(\"el\", el);\n        el.material.color.set(color);\n        Scene3D.renderer.render(Scene3D.scene, Scene3D.camera);\n      });\n  };\n\n  return (\n    <div>\n      <ColorButton onClick={() => setOpenTopColors(!openTopColors)}>\n        {openTopColors ? \"Close Colors\" : \"Change Top Color\"}\n      </ColorButton>\n      <ColCarre>\n        <Color style={{ background: topColor }}></Color>\n      </ColCarre>\n      {openTopColors ? (\n        <ColorModal changeColor={changeColor} part={\"top-plane\"} />\n      ) : null}\n\n      <ColorButton onClick={() => setOpenSideColors(!openSideColors)}>\n        {openSideColors ? \"Close Colors\" : \"Change Side Color\"}\n      </ColorButton>\n      <ColCarre>\n        <Color style={{ background: sideColor }}></Color>\n      </ColCarre>\n\n      {openSideColors ? (\n        <ColorModal changeColor={changeColor} part={\"side-plane\"} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Colors;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  ControlsContainer,\n  RadioButton,\n  Total,\n  SettingsButton,\n  CloseButton,\n} from \"../styles/styles\";\nimport Colors from \"./controls/Colors\";\n\nconst Controls = ({ Scene3D }) => {\n  const [topWidth, setTopWidth] = useState(20);\n  const [topDepth, setTopDepth] = useState(20);\n  const [sideHeight, setSideHeight] = useState(1);\n  const [total, setTotal] = useState(300);\n  const [realWidth, setRealWidth] = useState(6);\n  const [controlsOpen, setControlsOpen] = useState(false);\n\n  const changeTopSize = (part1, part2, position, width) => {\n    const currentItems = Scene3D.scene.children.filter(\n      (item) => item.name === part1 || item.name === part2\n    );\n    currentItems.map((item) => {\n      item.scale[position] = width;\n      Scene3D.renderer.render(Scene3D.scene, Scene3D.camera);\n    });\n  };\n\n  const changeHeight = (part1, part2, position, height) => {\n    const currentItems = Scene3D.scene.children.filter(\n      (item) => item.name === part1 || item.name === part2\n    );\n\n    currentItems.map((item) => {\n      item.scale[position] = height;\n      const multi = item.geometry.parameters.height * height;\n      const diff = multi - item.geometry.parameters.height;\n      const sub = -diff / 2;\n      item.position.set(item.position.x, sub, item.position.z);\n      Scene3D.renderer.render(Scene3D.scene, Scene3D.camera);\n    });\n  };\n\n  useEffect(() => {\n    const width = topWidth / 20;\n    setRealWidth(realWidth * width);\n    if (Scene3D.scene) changeTopSize(\"top-plane\", \"top-ruler\", \"y\", width);\n  }, [topWidth]);\n\n  useEffect(() => {\n    const width = topDepth / 20;\n    if (Scene3D.scene) changeTopSize(\"top-plane\", \"top-ruler\", \"z\", width);\n  }, [topDepth]);\n\n  useEffect(() => {\n    const height = parseFloat(sideHeight);\n    if (Scene3D.scene) changeHeight(\"side-plane\", \"side-ruler\", \"y\", height);\n  }, [sideHeight]);\n\n  const calculateTotal = () => {\n    const widthTotal = (topWidth - 20) * 10;\n    const topTotal = (topDepth - 20) * 10;\n    const sideTotal = sideHeight * 15;\n    const newTotal = 300 + widthTotal + topTotal + sideTotal;\n    setTotal(newTotal);\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [topWidth, topDepth, sideHeight]);\n\n  return controlsOpen ? (\n    <ControlsContainer>\n      <CloseButton\n        onClick={() => setControlsOpen(!controlsOpen)}\n        src=\"../../cancel.png\"\n        alt=\"Settings\"\n      />\n      <RadioButton>\n        <label>Top Plane Width</label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"40\"\n          value={topWidth}\n          step=\"0.01\"\n          onChange={(e) => setTopWidth(e.target.value)}\n        />\n      </RadioButton>\n\n      <RadioButton>\n        <label>Top Plane Depth</label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"40\"\n          value={topDepth}\n          step=\"0.01\"\n          onChange={(e) => setTopDepth(e.target.value)}\n        />\n      </RadioButton>\n\n      <RadioButton>\n        <label>Change height</label>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"2\"\n          value={sideHeight}\n          step=\"0.01\"\n          onChange={(e) => setSideHeight(e.target.value)}\n        />\n      </RadioButton>\n      <Colors Scene3D={Scene3D} />\n      <Total>\n        <p>Total: {Math.round(total)}</p>\n      </Total>\n    </ControlsContainer>\n  ) : (\n    <SettingsButton\n      onClick={() => setControlsOpen(!controlsOpen)}\n      src=\"../../setting.png\"\n      alt=\"Settings\"\n    />\n  );\n};\n\nexport default Controls;\n","import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nexport default class Scene {\n  constructor() {\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n  }\n\n  init() {\n    const container = document.getElementById(\"builder-scene\");\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xfffffff);\n\n    const camera = new THREE.PerspectiveCamera(\n      45,\n      window.innerWidth / window.innerHeight,\n      1,\n      1000\n    );\n\n    camera.position.set(0, 7, -35);\n    scene.add(camera);\n\n    const light = new THREE.AmbientLight(0xf3f3f3);\n    light.position.set(1, 500, 800);\n    scene.add(light);\n\n    var spotLight = new THREE.SpotLight(0x404040);\n    spotLight.position.set(0, 50, -30);\n    spotLight.castShadow = true;\n    scene.add(spotLight);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    container.appendChild(renderer.domElement);\n    renderer.render(scene, camera);\n\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n\n    requestAnimationFrame(animate);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n  }\n}\n","import * as THREE from \"three\";\n\nexport default class Table {\n  constructor(topPlane, sidePlane, backPlane) {\n    this.topPlane = topPlane;\n    this.sidePlane = sidePlane;\n    this.backPlane = backPlane;\n  }\n\n  init({ scene, camera, renderer }) {\n    const sideGeometry = new THREE.BoxGeometry(\n      this.sidePlane.x,\n      this.sidePlane.y,\n      this.sidePlane.z\n    );\n    const bottomMaterial = new THREE.MeshLambertMaterial({\n      color: \"#f0dea6\",\n      side: THREE.DoubleSide,\n    });\n\n    const leftSide = new THREE.Mesh(sideGeometry, bottomMaterial);\n    leftSide.position.x = 5;\n    leftSide.name = \"side-plane\";\n    scene.add(leftSide);\n\n    const rightSide = new THREE.Mesh(sideGeometry, bottomMaterial);\n    rightSide.position.x = -5;\n    rightSide.name = \"side-plane\";\n    scene.add(rightSide);\n\n    const topMaterial = new THREE.MeshLambertMaterial({\n      color: \"#996633\",\n      side: THREE.DoubleSide,\n    });\n\n    const topGeometry = new THREE.BoxGeometry(\n      this.topPlane.x,\n      this.topPlane.y,\n      this.topPlane.z\n    );\n    const topPlane = new THREE.Mesh(topGeometry, topMaterial);\n    topPlane.position.y = 4;\n    topPlane.rotateZ(-Math.PI / 2);\n    topPlane.name = \"top-plane\";\n    scene.add(topPlane);\n\n    const backGeometry = new THREE.BoxGeometry(\n      this.backPlane.x,\n      this.backPlane.y,\n      this.backPlane.z\n    );\n\n    const backPlane = new THREE.Mesh(backGeometry, bottomMaterial);\n    backPlane.position.y = 2;\n    backPlane.position.z = 3;\n    backPlane.rotateY(-Math.PI / 2);\n    backPlane.name = \"back-plane\";\n    scene.add(backPlane);\n\n    renderer.render(scene, camera);\n  }\n}\n","import * as THREE from \"three\";\n\nexport default class Ruler {\n  constructor(topPlane, sidePlane, backPlane) {\n    this.topPlane = topPlane;\n    this.sidePlane = sidePlane;\n    this.backPlane = backPlane;\n  }\n\n  init({ scene, camera, renderer }) {\n    const materialA = new THREE.MeshLambertMaterial({\n      color: 0x663399,\n      side: THREE.DoubleSide,\n    });\n    const materialB = new THREE.MeshLambertMaterial({\n      color: 0x0000cc,\n      side: THREE.DoubleSide,\n    });\n    const materialC = new THREE.MeshLambertMaterial({\n      color: 0x0066ff,\n      side: THREE.DoubleSide,\n    });\n\n    const topGeometry = new THREE.BoxGeometry(0.1, this.topPlane.y, 0.1);\n    const topRuler = new THREE.Mesh(topGeometry, materialA);\n    const top = scene.children.find((item) => item.name === \"top-plane\")\n      .position;\n    topRuler.position.x = top.x;\n    topRuler.position.y = top.y + 0.5;\n    topRuler.position.z = top.z - 5;\n    topRuler.rotateZ(-Math.PI / 2);\n    topRuler.name = \"top-ruler\";\n    scene.add(topRuler);\n\n    const sideGeometry = new THREE.BoxGeometry(0.1, this.sidePlane.y, 0.1);\n    const sideRuler = new THREE.Mesh(sideGeometry, materialB);\n    const side = scene.children.find((item) => item.name === \"side-plane\")\n      .position;\n    sideRuler.position.x = side.x - 5;\n    sideRuler.position.y = side.y;\n    sideRuler.position.z = side.z - 4;\n    sideRuler.name = \"side-ruler\";\n    scene.add(sideRuler);\n\n    const backGeometry = new THREE.BoxGeometry(0.1, 0.1, this.topPlane.z);\n    const backRuler = new THREE.Mesh(backGeometry, materialC);\n    backRuler.position.x = top.x + 8;\n    backRuler.position.y = top.y + 0.5;\n    backRuler.position.z = top.z;\n    // backRuler.rotateX(-Math.PI / 2);\n    backRuler.name = \"top-ruler\";\n    scene.add(backRuler);\n\n    renderer.render(scene, camera);\n  }\n}\n","import React, { useEffect } from \"react\";\nimport Controls from \"./Controls\";\n// import * as THREE from 'three'\nimport Scene from \"./Scene\";\nimport Table from \"./Table\";\nimport Ruler from \"./Ruler\";\n\nconst Scene3D = new Scene();\nconst topPlane = { x: 0.5, y: 15, z: 10 };\nconst sidePlane = { x: 0.5, y: 8, z: 8 };\nconst backPlane = { x: 0.5, y: 3, z: 10 };\n\nconst TableElement = new Table(topPlane, sidePlane, backPlane);\nconst RulerElement = new Ruler(topPlane, sidePlane, backPlane);\n\nexport default () => {\n  useEffect(() => {\n    Scene3D.init();\n    TableElement.init({\n      scene: Scene3D.scene,\n      camera: Scene3D.camera,\n      renderer: Scene3D.renderer,\n    });\n    // RulerElement.init({\n    //   scene: Scene3D.scene,\n    //   camera: Scene3D.camera,\n    //   renderer: Scene3D.renderer,\n    // });\n  }, []);\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    render();\n  };\n\n  const render = () => {\n    Scene3D.renderer.render(Scene3D.scene, Scene3D.camera);\n  };\n\n  return (\n    <div>\n      <div id=\"builder-scene\"></div>\n      <Controls Scene3D={Scene3D} />\n    </div>\n  );\n};\n","import Builder from \"./components/Builder\";\nimport { Header, LogoImage, AppContainer } from \"./styles/styles\";\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Header>\n        <LogoImage src=\"./tape-measure.png\" />\n        <p>Design your table</p>\n      </Header>\n      <Builder />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}